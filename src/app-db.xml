<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd "
	default-autowire="byName">
	<!-- mysql -->
	<context:property-placeholder location="classpath:jdbc.properties" />

<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
	init-method="init" destroy-method="close">
		
		<property name="url" value="jdbc:mysql://localhost:3306/weixin?characterEncoding=utf-8" />
		<property name="username" value="root" />
		<property name="password" value="root123" />
		
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="0" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="500" />
		<!-- 连接池最大空闲 -->
		<!-- <property name="maxIdle" value="20" /> -->
		<!-- 连接池最小空闲 -->
		<!-- <property name="minIdle" value="10" /> -->
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />

		<!-- 
		<property name="poolPreparedStatements" value="true" /> 
		<property name="maxPoolPreparedStatementPerConnectionSize" value="33" /> 
		-->

		<property name="validationQuery" value="${validationQuery}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000" />

		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />

		<!-- 监控数据库 -->
		<!-- 
		<property name="filters" value="stat" /> 
		-->
		<property name="filters" value="mergeStat" />
	</bean>

	<!-- ================================事务相关控制================================================= -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>


	<tx:advice id="userTxAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="delete*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" no-rollback-for="java.lang.Exception" />
			<tx:method name="insert*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="valid*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="notify*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="lock*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="get*" propagation="SUPPORTS" />
			<tx:method name="select*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="pc"
			expression="execution(public * com.lakala.emall.weixin.service.*.*(..))" />
		<!--把事务控制在Service层 -->
		<aop:advisor pointcut-ref="pc" advice-ref="userTxAdvice" />

	</aop:config>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:sqlMapConfig/*.xml" />
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.lakala.emall.weixin.db.mysql.manager" />
		<!--value指定的是上面myBatis配置的id-->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>


	<!--创建数据映射器，数据映射器必须为接口 -->
<!-- 	<bean id="openidMobileMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface"
			value=" com.lakala.emall.weixin.db.mysql.manager.OpenidMobileMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

 
	<bean id="smsMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface"
			value=" com.lakala.emall.weixin.db.mysql.manager.SmsMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="psamPropertyMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface"
			value=" com.lakala.emall.weixin.db.mysql.manager.PsamPropertyMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="psamPropertyInsMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface"
			value=" com.lakala.emall.weixin.db.mysql.manager.PsamPropertyInsMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="b2cOrderMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface"
			value=" com.lakala.emall.weixin.db.mysql.manager.B2cOrderMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="openidPsamMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface"
			value=" com.lakala.emall.weixin.db.mysql.manager.OpenidPsamMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="termDeviceMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface"
			value=" com.lakala.emall.weixin.db.mysql.manager.TermDeviceMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean> -->
	
	
	
</beans>
